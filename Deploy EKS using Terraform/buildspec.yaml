version: 0.2 
phases: 
  install:
    commands:

      - echo "Installing Python3.7 and ****"
      - yum install -y python3.7
      - python3.7 -m pip install lmctl==2.5.0
      
      - echo "Installing terraform"
      - curl -o /tmp/terraform.zip -LO https://releases.hashicorp.com/terraform/0.13.1/terraform_0.13.1_linux_amd64.zip
      - unzip /tmp/terraform.zip
      - chmod +x terraform && mv terraform /usr/local/bin/ 
      
      - echo "Install kubectl"
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/` curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      
      - echo "Installing Helm"      
      - echo Installing Helm......
      - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh
      - chmod 700 get_helm.sh
      - ./get_helm.sh
      
      - aws configure set aws_region us-east-2
      - aws sts get-caller-identity

      

  pre_build:
    commands:
       - export REPO_NAME=************.dkr.ecr.us-east-2.amazonaws.com/cpp/accanto/wait-for-ubi
       - echo ${REPO_NAME}
       
       - export NAMESPACE=xxxx
       - echo ${NAMESPACE} 
       
       - ls -lart /root
       - $(aws ecr get-login --no-include-email --region us-east-2)
       
       - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin ************.dkr.ecr.us-east-2.amazonaws.com
       
       - export KUBECONFIG=$HOME/.kube/config

       
       
  build:
    commands:
      - export REPO_PATH=`pwd`
      - echo ${REPO_PATH}
      - ls -alrt
      - cat cluster_names 

      - |
        while read line
        do
            echo $line
            VARIABLE=`sed -e 's/^"//' -e 's/"$//' <<<"$line"`
            echo $VARIABLE
            
            cd ${REPO_PATH}
            ls -alrt 
            
            rm -rf .terraform
            rm terraform.tfstate
            
            #WILL CHNAGE THE NAME OF THE CLUSTER
            sed -i -r "s#^(eks_name                                         = ).*#\1${line//#/\\#}#" terraform_tfvars
            
            
            cat terraform_tfvars
            echo "INIT"
            echo "========================"
            terraform init
            
            echo "PLAN"
            echo "========================"
            
            terraform plan -var-file=terraform_tfvars 
            
            echo "Apply"
            echo "====================================="
            terraform apply -var-file=terraform_tfvars -auto-approve 
      
      
      
            aws eks update-kubeconfig --name ${VARIABLE} --region us-east-2
            kubectl get ns

            
            echo "Describe config map"
            kubectl -n kube-system describe cm/aws-auth
            echo "Apply configmap"
            kubectl apply -f aws-auth-cm.tmpl
            echo "Describe config map after"
            kubectl -n kube-system describe cm/aws-auth
            
            
            
            echo "===========================" 
            echo "Step 1 - Creating Namespace"
            echo "==========================="

            kubectl create ns ${NAMESPACE}
            kubectl get ns
            aws ecr list-images --repository-name cpp/cassandra --region us-east-2
      
      
       
            echo "STEP-2 Install Trinaning package"
            echo "==============================="
            cd xxxx_Training_Package
            
            

            helm install foundation -n ${NAMESPACE} -f composer-values.yaml ../cpp_Training_Package
            
            runtime="20 minute"
            endtime=$(date -ud "$runtime" +%s)
            
            
            
            while [[ $(date -u +%s) -le $endtime ]]
            do
               echo "Time Now: `date +%H:%M:%S`"
               echo "=========================="
               kubectl get pods -n ${NAMESPACE}
               echo "Sleeping for 30 seconds"
               echo "=========================="
               sleep 30
            done


            
            kubectl get pods -n ${NAMESPACE}
            echo "The pods are running now "
       
       
            echo "STEP-3 Add Drivers "
            echo "========================="
      
            kubectl get svc -n ${NAMESPACE}|grep nginx|grep LoadBalancer
      
            export LB_Service_Name=`kubectl get svc -n ${NAMESPACE}|grep nginx|grep LoadBalancer|awk '/ib-orch001-ingress-nginxcontroller-003/ {print $1}'`
      
            echo ${LB_Service_Name}
      
            chmod +x ${REPO_PATH}/helm_wrapper_script_without_lmctl_helm.sh
            cd ${REPO_PATH}
      
            ./helm_wrapper_script_without_lm_helm.sh ${LB_Service_Name} ${NAMESPACE} y
            
            aws eks update-kubeconfig --name $VARIABLE
            cat /root/.kube/config
            cp /root/.kube/config ${REPO_PATH}/infra-config.yaml
            chmod +x helm_deployment_add.sh
            ./helm_deployment_add.sh DFW y
      
            echo "DEPLOYMENT iS SUCCESSFUL"
            
            echo "========================================================================================"
            
            
        done < cluster_names
      - |
      - echo "Completed"
